// <auto-generated />
using System;
using Eve.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Eve.Data.Migrations
{
    [DbContext(typeof(EveDbSet))]
    partial class EveDbSetModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eve.Domain.Employe", b =>
                {
                    b.Property<int>("empId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("categorieAssurance")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numInscAssur")
                        .HasColumnType("int");

                    b.Property<int>("plafondAssur")
                        .HasColumnType("int");

                    b.HasKey("empId");

                    b.ToTable("employes");
                });

            modelBuilder.Entity("Eve.Domain.Quittance", b =>
                {
                    b.Property<int>("idQuittance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateBordeau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateSoins")
                        .HasColumnType("datetime2");

                    b.Property<int>("employeFK")
                        .HasColumnType("int");

                    b.Property<float>("fraisEngage")
                        .HasColumnType("real");

                    b.Property<string>("matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numSinistre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroQuittance")
                        .HasColumnType("int");

                    b.Property<string>("prenomPrestataire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qualitePrestataire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("totalFraisEngage")
                        .HasColumnType("real");

                    b.HasKey("idQuittance");

                    b.HasIndex("employeFK");

                    b.ToTable("quittances");
                });

            modelBuilder.Entity("Eve.Domain.Quittance", b =>
                {
                    b.HasOne("Eve.Domain.Employe", "Employe")
                        .WithMany("quittances")
                        .HasForeignKey("employeFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("Eve.Domain.Employe", b =>
                {
                    b.Navigation("quittances");
                });
#pragma warning restore 612, 618
        }
    }
}
